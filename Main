local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local delayBetweenStages = 2
local autofarmEnabled = false
local totalRuns = 0
local totalGold = 0

-- Checkpointy
local stages = {
	Vector3.new(-69.88, 34.94, 1371.00),
	Vector3.new(-45.50, 27.61, 2133.89),
	Vector3.new(-43.02, 49.40, 2907.28),
	Vector3.new(-57.43, 43.20, 3679.27),
	Vector3.new(-39.82, 23.38, 4451.44),
	Vector3.new(-19.72, 24.05, 5222.60),
	Vector3.new(-3.54, 37.49, 5985.04),
	Vector3.new(1.23, 35.74, 6758.04),
	Vector3.new(-23.42, 59.45, 7531.34),
}

local treasure = Vector3.new(-60.73, -348.92, 9495.40)

-- GUI
local Window = Rayfield:CreateWindow({
	Name = "OnionScripts - Build A Boat AutoFarm",
	LoadingTitle = "OnionScripts",
	LoadingSubtitle = "Early Acces dub",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "OnionScripts",
		FileName = "BABAutoFarm"
	},
	KeySystem = false,
})

local farmTab = Window:CreateTab("AutoFarm", 4483362458)
local configTab = Window:CreateTab("Config", 4483362458)

farmTab:CreateParagraph({
	Title = "INFO",
	Content = "Farms gold and checkpoints\nAlso the display doenst work yet."
})

local runsText = farmTab:CreateParagraph({Title = "Rundy ukończone", Content = "0"})
local goldText = farmTab:CreateParagraph({Title = "Szacowany Gold", Content = "0"})

farmTab:CreateToggle({
	Name = "Turn off / Turn On",
	CurrentValue = false,
	Flag = "AutoFarmToggle",
	Callback = function(Value)
		autofarmEnabled = Value
	end,
})

configTab:CreateSlider({
	Name = "Delay through checkpoints ",
	Range = {1, 10},
	Increment = 1,
	Suffix = "s",
	CurrentValue = 2,
	Flag = "StageDelay",
	Callback = function(Value)
		delayBetweenStages = Value
	end,
})

configTab:CreateParagraph({
	Title = "WARNING",
	Content = "Please set the delay good for your wifi, if its bad and low delay then you will get low gold\nDepends on your wifi!"
})

-- Autofarm loop
task.spawn(function()
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer

	while true do
		if autofarmEnabled then
			local char = player.Character or player.CharacterAdded:Wait()
			local root = char:WaitForChild("HumanoidRootPart")
			local humanoid = char:WaitForChild("Humanoid")

			-- Track śmierci
			local died = false
			humanoid.Died:Connect(function()
				died = true
			end)

			for _, pos in ipairs(stages) do
				if not autofarmEnabled then break end
				root.Anchored = false
				root.CFrame = CFrame.new(pos + Vector3.new(0, 5, 0))
				task.wait(0.2)
				root.Anchored = true
				task.wait(delayBetweenStages)
			end

			if not autofarmEnabled then continue end

			-- Teleport na skrzynię
			root.Anchored = false
			root.CFrame = CFrame.new(treasure + Vector3.new(0, 10, 0))
			task.wait(0.5)
			root.Anchored = true

			-- Czekamy max 15s, aż gra nas zabije i zaliczy
			local t = 0
			while t < 15 and not died do
				if not autofarmEnabled then break end
				task.wait(1)
				t += 1
			end

			-- Jeśli zginął, to zaliczamy rundę
			if died then
				totalRuns += 1
				local earnedGold = 50 + math.random(10, 35)
				totalGold += earnedGold

				runsText:Set({Content = tostring(totalRuns)})
				goldText:Set({Content = tostring(totalGold)})

				game.StarterGui:SetCore("ChatMakeSystemMessage", {
					Text = "[OnionScripts] Runda #" .. totalRuns .. " zakończona (+ " .. earnedGold .. " golda)",
					Color = Color3.fromRGB(255, 255, 0),
					Font = Enum.Font.SourceSansBold,
					FontSize = Enum.FontSize.Size24,
				})
			end

			-- Czekamy na respawn
			task.wait(6)
		else
			task.wait(1)
		end
	end
end)
